name: release
on:
  push:
    branches:
      - main

jobs:
  test:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code üõéÔ∏è
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false

      - name: Automated test
        id: automated-test
        run: |
          docker-compose -f "docker-compose.ci.yml" up
          result=$(docker-compose ps | grep "ubuntu-users" | awk '{print $4}')
          echo "::set-output name=result::$(result)"

      - name: Test Check Passed
        if: steps.automated-test.outputs.result == '0'
        run: |
          echo "Test passed successfully"

      - name: Test Check Failed
        if: steps.automated-test.outputs.result != '0'
        run: |
          echo "Test failed successfully"
          exit 1

  install-dependencies:
    if: "!contains(github.event.head_commit.message, '[skip-ci]')"
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        node-version: [16.9.0]

    steps:
      - name: Checkout Code üõéÔ∏è
        uses: actions/checkout@v2.3.1
        with:
          persist-credentials: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: |
          yarn install --frozen-lockfile

  semantic-release:
    runs-on: ubuntu-latest
    needs: install-dependencies
    strategy:
      matrix:
        node-version: [16.9.0]

    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Semantic Release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: npx semantic-release
